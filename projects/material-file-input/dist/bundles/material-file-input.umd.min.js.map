{"version":3,"sources":["ng://material-file-input/lib/material-file-input.component.html","ng://material-file-input/lib/material-file-input.component.ts","ng://material-file-input/lib/material-file-input.module.ts"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","MatFileInputComponent","ngControl","fb","fm","elRef","_this","this","id","nextId","placeholderValue","requiredValue","disabledValue","buttonText","errorState","controlType","describedBy","multiple","stateChanges","Subject","focused","destroyed$","valueAccessor","form","FormControl","valueChanges","pipe","takeUntil","subscribe","value","onChange","monitor","nativeElement","origin","next","Object","defineProperty","prototype","empty","plh","req","coerceBooleanProperty","disable","enable","setValue","ngOnDestroy","complete","stopMonitoring","onContainerClick","event","target","tagName","toLowerCase","querySelector","focus","setDescribedByIds","ids","join","writeValue","registerOnChange","fn","registerOnTouched","openChooseFile","file","click","onFilesAdded","files","values","getName","map","name","_a","core","ɵɵdirectiveInject","forms","NgControl","FormBuilder","a11y","FocusMonitor","ElementRef","selectors","viewQuery","rf","ctx","provide","MatFormFieldControl","useExisting","decls","vars","consts","template","i0.ɵɵelement","i0.ɵɵtemplate","i0.ɵɵtext","i0.ɵɵadvance","i0.ɵɵpropertyInterpolate","i0.ɵɵproperty","i0.ɵɵtextInterpolate","MatFileInputModule","imports","CommonModule","MatInputModule","MatButtonModule","ReactiveFormsModule","FormsModule","declarations","exports"],"mappings":"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","sourcesContent":["<div class=\"mat-material-file-input-container\"\r\n     (click)=\"openChooseFile()\">\r\n  <input placeholder=\"{{placeholder}}\"\r\n         class=\"name\"\r\n         [value]=\"getName()\"\r\n         readonly=\"readonly\" />\r\n  <input *ngIf=\"multiple\"\r\n         type=\"file\"\r\n         #file\r\n         style=\"display: none\"\r\n         (change)=\"onFilesAdded()\"\r\n         multiple />\r\n\r\n  <input *ngIf=\"!multiple\"\r\n         type=\"file\"\r\n         #file\r\n         style=\"display: none\"\r\n         (change)=\"onFilesAdded()\" />\r\n  <button mat-stroked-button>{{buttonText}}</button>\r\n</div>\r\n","import { Component, ChangeDetectionStrategy, Input, OnDestroy, HostBinding, ElementRef, Optional, Self, ViewChild } from '@angular/core';\r\nimport { MatFormFieldControl } from '@angular/material/form-field';\r\nimport { Subject } from 'rxjs';\r\nimport { FormBuilder, NgControl, FormControl } from '@angular/forms';\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'mat-file-input',\r\n  templateUrl: './material-file-input.component.html',\r\n  styleUrls: ['./material-file-input.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [{ provide: MatFormFieldControl, useExisting: MatFileInputComponent }],\r\n})\r\nexport class MatFileInputComponent implements OnDestroy, MatFormFieldControl<File[]>{\r\n  static nextId = 0;\r\n  @HostBinding() id = `mat-file-input-${MatFileInputComponent.nextId++}`;\r\n  @HostBinding('class.floating')\r\n  get shouldLabelFloat() {\r\n    return this.focused || !this.empty;\r\n  }\r\n\r\n  @Input()\r\n  get placeholder() {\r\n    return this.placeholderValue;\r\n  }\r\n  set placeholder(plh) {\r\n    this.placeholderValue = plh;\r\n    this.stateChanges.next();\r\n  }\r\n  private placeholderValue = '';\r\n\r\n  @Input()\r\n  get required() {\r\n    return this.requiredValue;\r\n  }\r\n  set required(req) {\r\n    this.requiredValue = coerceBooleanProperty(req);\r\n    this.stateChanges.next();\r\n  }\r\n  private requiredValue = false;\r\n\r\n  @Input()\r\n  get disabled(): boolean { return this.disabledValue; }\r\n  set disabled(value: boolean) {\r\n    this.disabledValue = coerceBooleanProperty(value);\r\n    this.disabledValue ? this.form.disable() : this.form.enable();\r\n    this.stateChanges.next();\r\n  }\r\n  private disabledValue = false;\r\n\r\n  @Input() buttonText = 'Choose...';\r\n\r\n  errorState = false;\r\n  controlType = 'mat-material-file-input';\r\n\r\n  @HostBinding('attr.aria-describedby') describedBy = '';\r\n\r\n  @Input() multiple = false;\r\n  onChange: (value) => void;\r\n  form: FormControl;\r\n  stateChanges = new Subject<void>();\r\n  focused = false;\r\n\r\n  set value(value: File[]) {\r\n    this.form.setValue(value);\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  get value() {\r\n    return this.form.value;\r\n  }\r\n\r\n  get empty() {\r\n    return !this.form.value;\r\n  }\r\n\r\n  @ViewChild('file') file;\r\n\r\n  private destroyed$ = new Subject();\r\n\r\n  constructor(\r\n    @Optional() @Self() public ngControl: NgControl,\r\n    fb: FormBuilder,\r\n    private fm: FocusMonitor,\r\n    private elRef: ElementRef<HTMLElement>\r\n  ) {\r\n    // Replace the provider from above with this.\r\n    if (this.ngControl != null) {\r\n      // Setting the value accessor directly (instead of using\r\n      // the providers) to avoid running into a circular import.\r\n      this.ngControl.valueAccessor = (this as any);\r\n    }\r\n    this.form = new FormControl(null);\r\n    this.form.valueChanges.pipe(\r\n      takeUntil(this.destroyed$)\r\n    ).subscribe(value => {\r\n      if (this.onChange) {\r\n        this.onChange(value);\r\n      }\r\n    });\r\n    fm.monitor(elRef.nativeElement, true).subscribe(origin => {\r\n      this.focused = !!origin;\r\n      this.stateChanges.next();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stateChanges.complete();\r\n    this.fm.stopMonitoring(this.elRef.nativeElement);\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  onContainerClick(event: MouseEvent) {\r\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\r\n      this.elRef.nativeElement.querySelector('input').focus();\r\n    }\r\n  }\r\n\r\n  setDescribedByIds(ids: string[]) {\r\n    this.describedBy = ids.join(' ');\r\n  }\r\n\r\n  writeValue(value: File[]) {\r\n    this.value = value;\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => void) {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched() { }\r\n\r\n  openChooseFile() {\r\n    if (this.value) {\r\n      this.value = null;\r\n      this.file.nativeElement.value = '';\r\n    }\r\n    this.file.nativeElement.click();\r\n  }\r\n\r\n  onFilesAdded() {\r\n    const files = Object.values(this.file.nativeElement.files) as File[];\r\n    this.value = files;\r\n  }\r\n\r\n  getName() {\r\n    if (!this.value) {\r\n      return '';\r\n    }\r\n\r\n    return this.multiple ? this.value.map(file => file?.name).join(', ') : this.value[0]?.name;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { MatFileInputComponent } from './material-file-input.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [MatFileInputComponent],\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  exports: [MatFileInputComponent]\n})\nexport class MatFileInputModule { }\n"]}