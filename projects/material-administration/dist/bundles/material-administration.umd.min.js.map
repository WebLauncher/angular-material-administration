{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://material-administration/lib/services/data-adapter.service.ts","ng://material-administration/lib/components/metadata/metadata.component.ts","ng://material-administration/lib/components/metadata/metadata.component.html","ng://material-administration/lib/services/snackbar.service.ts","ng://material-administration/lib/services/value-format.service.ts","ng://material-administration/lib/components/breadcrumbs/breadcrumbs.component.html","ng://material-administration/lib/components/breadcrumbs/breadcrumbs.component.ts","ng://material-administration/lib/components/form/form.component.html","ng://material-administration/lib/components/form/form.component.ts","ng://material-administration/lib/components/add/add.component.html","ng://material-administration/lib/components/add/add.component.ts","ng://material-administration/lib/components/list/list.component.html","ng://material-administration/lib/components/list/list.component.ts","ng://material-administration/lib/components/update/update.component.html","ng://material-administration/lib/components/update/update.component.ts","ng://material-administration/lib/components/menu/menu.component.html","ng://material-administration/lib/components/menu/menu.component.ts","ng://material-administration/lib/material-administration.module.ts","ng://material-administration/lib/material-administration.routes.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","DataAdapterService","db","storage","get","collection","id","doc","valueChanges","list","idField","add","item","from","update","delete","upload","file","path","uuidv4","name","fileRef","ref","task","downloadData$","Subject","snapshotChanges","pipe","finalize","getDownloadURL","subscribe","downloadUrl","complete","filter","Boolean","removeUpload","filePath","getTimestamp","firebase.firestore","FieldValue","serverTimestamp","core","ɵɵinject","firestore","AngularFirestore","AngularFireStorage","factory","ɵfac","providedIn","MetadataComponent","route","dataAdapterService","metadata","_this","metadata$","BehaviorSubject","collectionPath$","collectionName$","subCollections$","isLoading$","destroyed$","params","map","tap","takeUntil","collectionPath","replace","shareReplay","getMetadata","entities","keys","key","ngOnDestroy","getFieldLabel","field","capitalize","label","getFields","entries","fields","_a","_b","_c","showField","switchMap","forkJoin","addAdditionalMetadata","catchError","console","of","processUploads","action","filesKeys","isArray","File","itemUpdates_1","downloadData","uploadedFiles","forEach","uploadedFile","getWithTimestamps","newItem","timestamp","getValue","createdTimestamp","updatedTimestamp","_d","getFieldMedatada","collectionName","nameParts","split","slice","join","inputType","data","type","collectionValue","take","docs","options","collectionLabel","ɵɵdirectiveInject","router","ActivatedRoute","selectors","decls","vars","template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","SnackbarService","snackbar","message","open","duration","panelClass","success","snackBar","MatSnackBar","ValueFormatService","datePipe","transform","toDate","format","timestampFormat","timezone","locale","common","DatePipe","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵtemplate","i0.ɵɵproperty","BreadcrumbsComponent","defineProperty","ngOnInit","links$","parts","getLinks","url","getPartUrls","concat","__spread","getItemUrl","itemId","baseUrl","titleField","source","part","plural","single","inputs","consts","i0.ɵɵelementContainer","ɵɵpureFunction1","_c0","field_r4","i0.ɵɵelement","i0.ɵɵtextInterpolate","ctx_r7","Editor","_r25","field_r6","placeholder","i0.ɵɵlistener","FormComponent","formBuilder","save","EventEmitter","ClassicEditor","form","group","reduce","prev","cur","getFieldValue","getFieldValidators","submit","valid","emit","removeImage","setValue","Validators","required","forms","FormBuilder","outputs","i0.ɵɵpropertyInterpolate1","AddComponent","_super","fields$","combineLatest","updatedItem","navigate","Router","features","ɵɵInheritDefinitionFeature","_r2","i0.ɵɵstyleMap","column_r14","i0.ɵɵpropertyInterpolate3","i0.ɵɵpropertyInterpolate2","ListComponent","valueFormatService","displayedColumns$","getDisplayedColumns","displayedColumnsNames$","columns","column","list$","element","withLatestFrom","subCollections","collumns","getDisplayableColumns","pickBy","col","hideInList","UpdateComponent","id$","doc$","getDoc","entityTitle$","MenuComponent","hideList","MaterialAdministrationModule","forRoot","configFactory","appNameFactory","ngModule","providers","provide","FIREBASE_OPTIONS","useValue","FIREBASE_APP_NAME","useFactory","imports","CommonModule","MatChipsModule","MatCardModule","MatIconModule","MatToolbarModule","RouterModule","MatProgressSpinnerModule","CdkTableModule","MatTableModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatFileInputModule","MatButtonModule","CKEditorModule","MatInputModule","MatSelectModule","MatRadioModule","MatCheckboxModule","MatSlideToggleModule","MatDatepickerModule","MatSnackBarModule","MatNativeDateModule","MatPaginatorModule","MatSortModule","AngularFirestoreModule","AngularFireStorageModule","FlexLayoutModule","MatMenuModule","MatSidenavModule","MatListModule","BrowserAnimationsModule","declarations","exports","materialAdministrationRoutes","component","redirectTo"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { DataAdapterInterface, DownloadData } from './data-adapter';\r\nimport { from, Subject, Observable } from 'rxjs';\r\nimport * as firebase from 'firebase/app';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { finalize, filter } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataAdapterService implements DataAdapterInterface {\r\n  constructor(\r\n    private db: AngularFirestore,\r\n    private storage: AngularFireStorage\r\n  ) { }\r\n\r\n  get(collection: string, id: string) {\r\n    return this.db.collection(collection).doc(id).valueChanges();\r\n  }\r\n\r\n  list(collection: string, idField: string) {\r\n    return this.db.collection(collection).valueChanges({ idField });\r\n  }\r\n\r\n  add(collection: string, item: any) {\r\n    return from(this.db.collection(collection).add(item));\r\n  }\r\n\r\n  update(collection: string, id: string, item: any) {\r\n    return from(this.db.collection(collection).doc(id).update(item));\r\n  }\r\n\r\n  delete(collection: string, id: string) {\r\n    return from(this.db.collection(collection).doc(id).delete());\r\n  }\r\n\r\n  upload(file: File): Observable<DownloadData> {\r\n    const path = uuidv4() + '_' + file?.name;\r\n    const fileRef = this.storage.ref(path);\r\n    const task = this.storage.upload(path, file);\r\n    const downloadData$ = new Subject<DownloadData>();\r\n\r\n    task.snapshotChanges().pipe(\r\n      finalize(() => {\r\n        fileRef.getDownloadURL().subscribe(downloadUrl => {\r\n          downloadData$.next({\r\n            downloadUrl,\r\n            path\r\n          });\r\n          downloadData$.complete();\r\n        });\r\n      })\r\n    ).subscribe();\r\n\r\n    return downloadData$.pipe(filter(Boolean)) as Observable<DownloadData>;\r\n  }\r\n\r\n  removeUpload(filePath: string) {\r\n    return this.storage.ref(filePath).delete();\r\n  }\r\n\r\n  getTimestamp() {\r\n    return firebase.firestore.FieldValue.serverTimestamp();\r\n  }\r\n}\r\n","import { Component, OnDestroy, Optional, Inject } from '@angular/core';\r\nimport { BehaviorSubject, of, forkJoin, Subject, Observable } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { map, shareReplay, switchMap, take, catchError, takeUntil, tap } from 'rxjs/operators';\r\nimport { capitalize } from 'lodash';\r\nimport { DataAdapterService } from '../../services/data-adapter.service';\r\nimport { DownloadData } from '../../services';\r\nimport { MatAdministrationEntity } from '../../types/material-administration-metadata';\r\n\r\n@Component({\r\n  selector: 'mat-administration-metadata',\r\n  templateUrl: './metadata.component.html',\r\n  styleUrls: ['./metadata.component.scss']\r\n})\r\nexport class MetadataComponent implements OnDestroy {\r\n  metadata$: BehaviorSubject<any> = new BehaviorSubject(null);\r\n  collectionPath$: BehaviorSubject<string> = new BehaviorSubject(null);\r\n  collectionName$: BehaviorSubject<string> = new BehaviorSubject(null);\r\n  subCollections$: BehaviorSubject<MatAdministrationEntity[]> = new BehaviorSubject(null);\r\n  isLoading$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n  destroyed$ = new Subject();\r\n\r\n  constructor(\r\n    public route: ActivatedRoute,\r\n    public dataAdapterService: DataAdapterService,\r\n    @Optional() @Inject('MAT_ADMINISTRATION_METADATA') public metadata: any\r\n  ) {\r\n    this.route.params.pipe(\r\n      map(params => params?.collection),\r\n      tap(() => this.isLoading$.next(true)),\r\n      takeUntil(this.destroyed$)\r\n    )\r\n      .subscribe(this.collectionPath$);\r\n\r\n    this.collectionPath$.pipe(\r\n      map(collectionPath => collectionPath.replace(/\\:/gi, '\\/')),\r\n      shareReplay(1)\r\n    )\r\n      .subscribe(this.collectionName$);\r\n\r\n    this.collectionName$.pipe(\r\n      map(name => this.getMetadata(name, metadata)),\r\n      shareReplay(1)\r\n    ).subscribe(this.metadata$);\r\n\r\n    this.metadata$.pipe(\r\n      map(metadata => {\r\n        if (!metadata?.entities) {\r\n          return null;\r\n        }\r\n\r\n        return Object.keys(metadata.entities).map(key => {\r\n          return {\r\n            id: key,\r\n            ...metadata.entities[key]\r\n          };\r\n        });\r\n      })\r\n    ).subscribe(this.subCollections$);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  getFieldLabel(field: any): string {\r\n    if (typeof field === 'string') {\r\n      return capitalize(field);\r\n    }\r\n\r\n    return capitalize(field?.label);\r\n  }\r\n\r\n  getFields() {\r\n    return this.metadata$.pipe(\r\n      map(metadata => {\r\n        const entries = Object.entries(metadata?.fields);\r\n\r\n        return entries\r\n          .map(\r\n            ([key, value]) => typeof value === 'object' ?\r\n              { ...value, name: key, label: ((value as any)?.label || this.getFieldLabel(key)) } :\r\n              { name: key, label: this.getFieldLabel(key) }\r\n          )\r\n          .filter(field => this.showField(metadata, field));\r\n      }),\r\n      switchMap(fields => forkJoin(fields.map(field => this.addAdditionalMetadata(field)))),\r\n      catchError(error => {\r\n        console.error(error);\r\n\r\n        return of([]);\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  processUploads(item, metadata, action: 'add' | 'update') {\r\n    const filesKeys = Object.keys(item)\r\n      .filter(key => Array.isArray(item[key]) && item[key][0] instanceof File);\r\n\r\n    if (filesKeys.length) {\r\n      const itemUpdates = {};\r\n\r\n      return forkJoin(filesKeys.map(key => {\r\n        return this.dataAdapterService.upload(item[key][0]).pipe(\r\n          map(downloadData => {\r\n            return { key, downloadData };\r\n          }),\r\n          catchError(error => {\r\n            console.error(error);\r\n\r\n            return of(null);\r\n          })\r\n        ) as Observable<{ key: string, downloadData: DownloadData }>;\r\n      })).pipe(\r\n        map((uploadedFiles) => {\r\n          if (uploadedFiles) {\r\n            uploadedFiles.forEach(uploadedFile => {\r\n              itemUpdates[uploadedFile?.key] = uploadedFile?.downloadData?.downloadUrl;\r\n              itemUpdates[uploadedFile?.key + 'Path'] = uploadedFile?.downloadData?.path;\r\n            });\r\n          }\r\n\r\n          return {\r\n            ...item,\r\n            ...itemUpdates\r\n          };\r\n        })\r\n      );\r\n    }\r\n\r\n    return of(item);\r\n  }\r\n\r\n  getWithTimestamps(item, action: 'add' | 'update') {\r\n    const newItem = { ...item };\r\n\r\n    const timestamp = this.dataAdapterService.getTimestamp();\r\n    if (action === 'add' && this.metadata$.getValue()?.createdTimestamp) {\r\n      newItem[this.metadata$.getValue()?.createdTimestamp] = timestamp;\r\n    }\r\n    if (this.metadata$.getValue()?.updatedTimestamp) {\r\n      newItem[this.metadata$.getValue()?.updatedTimestamp] = timestamp;\r\n    }\r\n\r\n    return newItem;\r\n  }\r\n\r\n  getFieldMedatada(field: string) {\r\n    return this.metadata$.getValue()?.entities?.[field];\r\n  }\r\n\r\n  private getMetadata(collectionName: string, metadata: any) {\r\n    const nameParts = collectionName.split('/');\r\n\r\n    if (nameParts.length === 1) {\r\n      return metadata.entities[nameParts[0]] || null;\r\n    }\r\n\r\n    return this.getMetadata(nameParts.slice(2).join('/'), metadata.entities[nameParts[0]]);\r\n  }\r\n\r\n  private addAdditionalMetadata(field) {\r\n    if ((field?.inputType === 'select' || field?.inputType === 'radio') && field?.data?.type === 'collection') {\r\n      return this.dataAdapterService.list(field?.data?.collection, field?.data?.collectionValue)\r\n        .pipe(\r\n          take(1),\r\n          map(docs => {\r\n            return {\r\n              ...field,\r\n              options: docs.map(doc => {\r\n                return {\r\n                  value: doc[field?.data?.collectionValue],\r\n                  label: doc[field?.data?.collectionLabel]\r\n                };\r\n              })\r\n            };\r\n          })\r\n        );\r\n    }\r\n\r\n    return of(field);\r\n  }\r\n\r\n  private showField(metadata, field) {\r\n    return field.name !== 'id' &&\r\n      (!metadata?.createdTimestamp || metadata?.createdTimestamp !== field.name) &&\r\n      (!metadata?.updatedTimestamp || metadata?.updatedTimestamp !== field.name);\r\n  }\r\n}\r\n","<p>metadata works!</p>\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackbarService {\n\n  constructor(\n    private snackbar: MatSnackBar\n  ) { }\n\n  error(message) {\n    this.snackbar.open(message,  'Close', {\n      duration: 3000,\n      panelClass: 'snackbar-error'\n    });\n  }\n\n  success(message) {\n    this.snackbar.open(message,  'Close', {\n      duration: 3000,\n      panelClass: 'snackbar-success'\n    });\n  }\n}\n","import { Injectable, Optional, Inject } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValueFormatService {\n  constructor(\n    private datePipe: DatePipe,\n    @Optional() @Inject('MAT_ADMINISTRATION_METADATA') private metadata: any\n  ) { }\n\n  transform(value: any, type: string, options = null) {\n    switch (type) {\n      case 'timestamp':\n        return this.datePipe.transform(\n          value?.toDate(),\n          options?.format || this.metadata?.timestampFormat,\n          options.timezone,\n          options?.locale\n        );\n      default:\n        return value;\n    }\n  }\n}\n","<div fxLayout=\"row\"\r\n     fxAlign=\"start\">\r\n  <ng-container *ngFor=\"let item of links$ | async; let last = last\">\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"start center\">\r\n      <a mat-button\r\n         [routerLink]=\"item.url\">\r\n        <ng-container *ngIf=\"item.source\">\r\n          {{(item.source | async)}}\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!item.source\">\r\n          {{item.name}}\r\n        </ng-container>\r\n      </a>\r\n      <mat-icon *ngIf=\"!last\">arrow_right</mat-icon>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n","import { Component, OnInit, Input, Optional, Inject } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { MatAdministrationEntity, MatAdministrationMetadata } from '../../types';\r\nimport { capitalize } from 'lodash';\r\nimport { map } from 'rxjs/operators';\r\nimport { DataAdapterService } from '../../services';\r\n\r\n@Component({\r\n  selector: 'mat-administration-breadcrumbs',\r\n  templateUrl: './breadcrumbs.component.html',\r\n  styleUrls: ['./breadcrumbs.component.css']\r\n})\r\nexport class BreadcrumbsComponent implements OnInit {\r\n  @Input() set collectionName(value: string) {\r\n    this.collectionName$.next(value);\r\n  }\r\n  get collectionName() {\r\n    return this.collectionName$.getValue();\r\n  }\r\n\r\n  @Input() action: 'add' | 'update' | 'list';\r\n\r\n  links$: Observable<any>;\r\n\r\n  private collectionName$ = new BehaviorSubject('');\r\n\r\n  constructor(\r\n    @Optional() @Inject('MAT_ADMINISTRATION_METADATA') public metadata: MatAdministrationMetadata,\r\n    public dataAdapterService: DataAdapterService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.links$ = this.collectionName$.pipe(\r\n      map(collectionName => {\r\n        const parts = collectionName.split('/');\r\n        return this.getLinks(parts, this.metadata.entities[parts[0]]);\r\n      })\r\n    );\r\n  }\r\n\r\n  private getLinks(parts: string[], metadata: Partial<MatAdministrationEntity>, url = '/') {\r\n    if (parts.length === 1) {\r\n      return this.getPartUrls(parts[0], metadata, url, this.action);\r\n    }\r\n\r\n    return [\r\n      ...this.getPartUrls(parts[0], metadata, url, 'list'),\r\n      this.getItemUrl(parts[0], parts[1], metadata, url),\r\n      ...this.getLinks(parts.slice(2), metadata.entities[parts[2]], `${url}${parts[0]}:${parts[1]}:`)\r\n    ];\r\n  }\r\n\r\n  private getItemUrl(collection, itemId, metadata, baseUrl) {\r\n    return {\r\n      name: metadata.titleField || 'title',\r\n      source: this.dataAdapterService.get(collection, itemId).pipe(map(data => data?.[metadata.titleField || 'title'])),\r\n      url: [`${baseUrl}${collection}/update/${itemId}`]\r\n    };\r\n  }\r\n\r\n  private getPartUrls(part, metadata, baseUrl = '', action = 'list', itemId = '') {\r\n    if (action === 'list') {\r\n      return [{\r\n        name: capitalize(metadata.plural),\r\n        url: [`${baseUrl}${part}/list`]\r\n      }];\r\n    }\r\n\r\n    if (action === 'add') {\r\n      return [\r\n        {\r\n          name: capitalize(metadata.plural),\r\n          url: [`${baseUrl}${part}/list`]\r\n        },\r\n        {\r\n          name: `Add ${metadata.single}`,\r\n          url: null\r\n        }\r\n      ];\r\n    }\r\n\r\n    if (action === 'update') {\r\n      return [\r\n        {\r\n          name: capitalize(metadata.plural),\r\n          url: [`${baseUrl}${part}/list`]\r\n        },\r\n        {\r\n          name: `Update ${metadata.single}`,\r\n          url: null\r\n        }\r\n      ];\r\n    }\r\n  }\r\n}\r\n","<form [formGroup]=\"form\"\r\n      (ngSubmit)=\"submit()\">\r\n  <ng-container *ngIf=\"fields\">\r\n\r\n    <div *ngFor=\"let field of fields\">\r\n      <ng-container *ngTemplateOutlet=\"formField; context: {field: field}\"></ng-container>\r\n    </div>\r\n    <div class=\"flex justify-end\">\r\n      <button mat-raised-button\r\n              color=\"primary\"\r\n              type=\"submit\">Save\r\n      </button>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-template #formField\r\n               let-field=\"field\">\r\n    <div class=\"form-field-container\" [ngStyle]=\"field?.style?.form\">\r\n      <ng-container [ngSwitch]=\"field?.inputType\">\r\n        <!-- ckeditor -->\r\n        <div *ngSwitchCase=\"'ckeditor'\"\r\n             class=\"ckeditor\">\r\n          <label>{{field?.label}}</label>\r\n          <ckeditor [formControlName]=\"field?.name\"\r\n                    [editor]=\"Editor\"></ckeditor>\r\n        </div>\r\n        <!-- textarea -->\r\n        <mat-form-field *ngSwitchCase=\"'textarea'\">\r\n          <mat-label>{{field?.label}}</mat-label>\r\n          <textarea matInput\r\n                    [formControlName]=\"field?.name\"></textarea>\r\n        </mat-form-field>\r\n        <!-- select -->\r\n        <mat-form-field *ngSwitchCase=\"'select'\">\r\n          <mat-label>{{field?.label}}</mat-label>\r\n          <mat-select [formControlName]=\"field?.name\">\r\n            <mat-option *ngFor=\"let option of field?.options\"\r\n                        [value]=\"option?.value\">\r\n              {{option?.label}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <!-- radio -->\r\n        <div *ngSwitchCase=\"'radio'\"\r\n             class=\"radio\">\r\n          <mat-label>{{field?.label}}:</mat-label>\r\n          <mat-radio-group [formControlName]=\"field?.name\"\r\n                           color=\"primary\">\r\n            <mat-radio-button *ngFor=\"let option of field?.options\"\r\n                              [value]=\"option?.value\">{{option?.label}}</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <!-- datepicker -->\r\n        <mat-form-field *ngSwitchCase=\"'datepicker'\">\r\n          <mat-label>{{field?.label}}</mat-label>\r\n          <input matInput\r\n                 [formControlName]=\"field?.name\"\r\n                 [matDatepicker]=\"picker\">\r\n          <mat-datepicker-toggle matSuffix\r\n                                 [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-datepicker touchUi\r\n                          #picker></mat-datepicker>\r\n        </mat-form-field>\r\n        <!-- checkbox -->\r\n        <div *ngSwitchCase=\"'checkbox'\"\r\n             class=\"checkbox\">\r\n          <mat-checkbox [formControlName]=\"field?.name\"\r\n                        color=\"primary\"\r\n                        [value]=\"true\">{{field?.label}}</mat-checkbox>\r\n        </div>\r\n        <!-- slide togle -->\r\n        <div *ngSwitchCase=\"'toggle'\"\r\n             class=\"checkbox\">\r\n          <mat-slide-toggle color=\"primary\"\r\n                            [formControlName]=\"field?.name\">\r\n            {{field?.label}}\r\n          </mat-slide-toggle>\r\n        </div>\r\n        <!-- file upload -->\r\n        <mat-form-field *ngSwitchCase=\"'file'\">\r\n          <mat-label>{{field?.label}}</mat-label>\r\n          <mat-file-input [formControlName]=\"field?.name\"\r\n                          [placeholder]=\"field?.placeholder\"></mat-file-input>\r\n        </mat-form-field>\r\n        <!-- image upload -->\r\n        <div *ngSwitchCase=\"'image'\">\r\n          <div *ngIf=\"field?.value\">\r\n            <mat-label>{{field?.label}}</mat-label>\r\n            <div fxLayout=\"row\"\r\n                 fxLayoutAlign=\"start\">\r\n              <img class=\"file-input-image\"\r\n                   [src]=\"field?.value\"\r\n                   alt=\"field?.label\" />\r\n              <button type=\"button\"\r\n                      mat-raised-button\r\n                      (click)=\"removeImage(field)\">Remove</button>\r\n            </div>\r\n          </div>\r\n\r\n          <mat-form-field *ngIf=\"!field?.value\">\r\n            <mat-label>{{field?.label}}</mat-label>\r\n            <mat-file-input [formControlName]=\"field?.name\"\r\n                            [placeholder]=\"field?.placeholder\"></mat-file-input>\r\n\r\n          </mat-form-field>\r\n        </div>\r\n        <!-- text input -->\r\n        <mat-form-field *ngSwitchDefault>\r\n          <mat-label>{{field?.label}}</mat-label>\r\n          <input matInput\r\n                 [formControlName]=\"field?.name\"\r\n                 [placeholder]=\"field?.placeholder\">\r\n        </mat-form-field>\r\n      </ng-container>\r\n    </div>\r\n  </ng-template>\r\n\r\n</form>\r\n","import { Component, OnInit, ChangeDetectionStrategy, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { takeUntil, tap } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n@Component({\r\n  selector: 'mat-administration-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FormComponent implements OnInit, OnDestroy {\r\n  @Input() fields: any[];\r\n  @Output() save: EventEmitter<any> = new EventEmitter();\r\n  @Output() valueChanges: EventEmitter<any> = new EventEmitter();\r\n\r\n  form: FormGroup;\r\n  Editor = ClassicEditor;\r\n\r\n  private destroyed$: Subject<void> = new Subject();\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.fields) {\r\n      this.form = this.formBuilder.group(\r\n        this.fields?.reduce((prev, cur) => {\r\n          return { ...prev, [cur?.name]: [this.getFieldValue(cur), this.getFieldValidators(cur)] };\r\n        }, {})\r\n      );\r\n\r\n      this.form.valueChanges.pipe(\r\n        takeUntil(this.destroyed$)\r\n      ).subscribe(this.valueChanges);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.valid) {\r\n      this.save.emit(this.form.value);\r\n    }\r\n  }\r\n\r\n  removeImage(field) {\r\n    field.value = null;\r\n    this.form.get(field.name).setValue(null);\r\n  }\r\n\r\n  private getFieldValue(field) {\r\n    return field?.value;\r\n  }\r\n\r\n  private getFieldValidators(field) {\r\n    return [Validators.required];\r\n  }\r\n}\r\n","<div class=\"loading-box-overflow\"\r\n     *ngIf=\"isLoading$ | async\">\r\n  <mat-spinner diameter=\"50\"></mat-spinner>\r\n</div>\r\n<ng-container *ngIf=\"metadata$ | async as metadata; else noMetadata\">\r\n  <mat-administration-breadcrumbs [collectionName]=\"collectionName$ | async\"\r\n                                  action=\"add\"></mat-administration-breadcrumbs>\r\n  <mat-toolbar class=\"justify-between\">\r\n    <h1>Add {{metadata?.single}}</h1>\r\n    <a mat-raised-button\r\n       color=\"warn\"\r\n       routerLink=\"/{{collectionPath$ | async}}/list\">\r\n      <mat-icon>keyboard_backspace</mat-icon> Cancel\r\n    </a>\r\n  </mat-toolbar>\r\n  <mat-card>\r\n    <mat-administration-form [fields]=\"fields$ | async\"\r\n                             *ngIf=\"fields$ | async\"\r\n                             (save)=\"save($event);\"></mat-administration-form>\r\n  </mat-card>\r\n</ng-container>\r\n\r\n<ng-template #noMetadata>\r\n  <mat-chip-list>\r\n    <mat-chip color=\"warn\">No entity metadata defined for&nbsp;<strong>{{collectionName$ | async}}</strong>!</mat-chip>\r\n  </mat-chip-list>\r\n</ng-template>\r\n","import { Component, Inject, Optional } from '@angular/core';\r\nimport { MetadataComponent } from '../metadata/metadata.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { take, tap, switchMap, map } from 'rxjs/operators';\r\nimport { SnackbarService } from '../../services/snackbar.service';\r\nimport { capitalize } from 'lodash';\r\nimport { DataAdapterService } from '../../services/data-adapter.service';\r\nimport { Immutable } from 'types/immutable';\r\n\r\n@Component({\r\n  selector: 'mat-administration-add',\r\n  templateUrl: './add.component.html',\r\n  styleUrls: ['./add.component.scss']\r\n})\r\nexport class AddComponent extends MetadataComponent {\r\n  fields$: Observable<any[]>;\r\n\r\n  constructor(\r\n    public route: ActivatedRoute,\r\n    private snackbar: SnackbarService,\r\n    private router: Router,\r\n    public dataAdapterService: DataAdapterService,\r\n    @Optional() @Inject('MAT_ADMINISTRATION_METADATA') public metadata: Immutable<any>\r\n  ) {\r\n    super(route, dataAdapterService, metadata);\r\n\r\n    this.fields$ = this.getFields().pipe(tap(() => { this.isLoading$.next(false); }));\r\n  }\r\n\r\n  save(item: any) {\r\n    this.isLoading$.next(true);\r\n    combineLatest([\r\n      this.metadata$,\r\n      this.collectionName$\r\n    ])\r\n      .pipe(\r\n        take(1),\r\n        switchMap(([metadata, collectionName]) => {\r\n          return this.processUploads(item, metadata, 'add').pipe(map(updatedItem => {\r\n            return [\r\n              metadata,\r\n              collectionName,\r\n              updatedItem\r\n            ];\r\n          }));\r\n        }),\r\n        switchMap(([_, collectionName, updatedItem]) =>\r\n          this.dataAdapterService.add(collectionName, this.getWithTimestamps(updatedItem, 'add'))\r\n        )\r\n      ).subscribe(\r\n        () => {\r\n          this.snackbar.success(`${capitalize(this.metadata$.getValue()?.single)} added successfully!`);\r\n          this.router.navigate([`/${this.collectionPath$.getValue()}/list`]);\r\n        },\r\n        () => this.snackbar.error(`There was an error adding ${this.metadata$.getValue()?.single}!`),\r\n        () => this.isLoading$.next(false)\r\n      );\r\n  }\r\n}\r\n","<div class=\"loading-box-overflow\"\r\n     *ngIf=\"isLoading$ | async\">\r\n  <mat-spinner diameter=\"50\"></mat-spinner>\r\n</div>\r\n<ng-container *ngIf=\"metadata$ | async as metadata; else noMetadata\">\r\n  <mat-administration-breadcrumbs [collectionName]=\"collectionName$ | async\"\r\n                                  action=\"list\"></mat-administration-breadcrumbs>\r\n  <mat-toolbar class=\"justify-between\">\r\n    <h1>Manage {{metadata?.plural}}</h1>\r\n    <button mat-raised-button\r\n            color=\"primary\"\r\n            routerLink=\"/{{collectionPath$ | async}}/add\">\r\n      <mat-icon>add</mat-icon> Add {{metadata?.single}}\r\n    </button>\r\n  </mat-toolbar>\r\n  <table mat-table\r\n         *ngIf=\"(list$ | async)?.length\"\r\n         [dataSource]=\"list$ | async\"\r\n         class=\"mat-elevation-z8\">\r\n    <ng-container *ngFor=\"let column of displayedColumns$ | async\">\r\n      <ng-container [matColumnDef]=\"column?.id\"\r\n                    *ngIf=\"column?.id != 'actions' && column?.id != 'entities'\">\r\n        <th mat-header-cell\r\n            *matHeaderCellDef> {{column?.label}} </th>\r\n        <td mat-cell\r\n            *matCellDef=\"let element\">\r\n          <ng-container [ngSwitch]=\"column?.format\">\r\n            <ng-container *ngSwitchCase=\"'image'\">\r\n              <img [src]=\"getValue(element, column?.id) | async\"\r\n                   class=\"list-image\"\r\n                   [style]=\"column?.style?.list\"\r\n                   [alt]=\"column?.id\" />\r\n            </ng-container>\r\n\r\n            <ng-container *ngSwitchDefault>\r\n              <span [style]=\"column?.style?.list\"\r\n                    [innerHTML]=\"getValue(element, column?.id) | async\"></span>\r\n            </ng-container>\r\n          </ng-container>\r\n        </td>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"entities\">\r\n      <th mat-header-cell\r\n          *matHeaderCellDef>Manage</th>\r\n      <td mat-cell\r\n          *matCellDef=\"let element\">\r\n        <button mat-raised-button\r\n                [matMenuTriggerFor]=\"entitiesMenu\">More...</button>\r\n        <mat-menu #entitiesMenu=\"matMenu\">\r\n          <button *ngFor=\"let subCollection of subCollections$ | async\"\r\n                  mat-menu-item\r\n                  aria-label=\"Manage\"\r\n                  routerLink=\"/{{collectionName$ | async}}:{{element.id}}:{{subCollection?.id}}/list\">\r\n            {{subCollection?.plural | titlecase}}\r\n          </button>\r\n        </mat-menu>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"actions\">\r\n      <th mat-header-cell\r\n          *matHeaderCellDef></th>\r\n      <td mat-cell\r\n          *matCellDef=\"let element\">\r\n        <button mat-icon-button\r\n                aria-label=\"Edit\"\r\n                routerLink=\"/{{collectionPath$ | async}}/update/{{element.id}}\">\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button\r\n                color=\"warn\"\r\n                aria-label=\"Delete\"\r\n                (click)=\"delete(element)\">\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row\r\n        *matHeaderRowDef=\"displayedColumnsNames$ | async\"></tr>\r\n    <tr mat-row\r\n        *matRowDef=\"let row; columns: displayedColumnsNames$ | async;\"></tr>\r\n  </table>\r\n\r\n  <mat-card *ngIf=\"!(list$ | async)?.length\">\r\n    No {{metadata?.plural}} added. <a mat-button\r\n       color=\"primary\"\r\n       routerLink=\"/{{collectionPath$ | async}}/add\">Add {{metadata?.single}}</a>\r\n  </mat-card>\r\n</ng-container>\r\n\r\n<ng-template #noMetadata>\r\n  <mat-chip-list>\r\n    <mat-chip color=\"warn\">No entity metadata defined for&nbsp;<strong>{{collectionName$ | async}}</strong>!</mat-chip>\r\n  </mat-chip-list>\r\n</ng-template>\r\n","import { Component, Optional, Inject } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, switchMap, shareReplay, tap, withLatestFrom } from 'rxjs/operators';\r\nimport { ValueFormatService } from '../../services/value-format.service';\r\nimport { pickBy } from 'lodash';\r\nimport { MetadataComponent } from '../metadata/metadata.component';\r\nimport { SnackbarService } from '../../services/snackbar.service';\r\nimport { capitalize } from 'lodash';\r\nimport { DataAdapterService } from '../../services/data-adapter.service';\r\n\r\n@Component({\r\n  selector: 'mat-administration-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss']\r\n})\r\nexport class ListComponent extends MetadataComponent {\r\n  displayedColumns$: Observable<any[]>;\r\n  displayedColumnsNames$: Observable<string[]>;\r\n  list$: Observable<any[]>;\r\n\r\n  constructor(\r\n    public route: ActivatedRoute,\r\n    private valueFormatService: ValueFormatService,\r\n    private snackbar: SnackbarService,\r\n    public dataAdapterService: DataAdapterService,\r\n    @Optional() @Inject('MAT_ADMINISTRATION_METADATA') public metadata: any\r\n  ) {\r\n    super(route, dataAdapterService, metadata);\r\n\r\n    this.displayedColumns$ = this.getDisplayedColumns();\r\n    this.displayedColumnsNames$ = this.displayedColumns$.pipe(map(columns => columns.map(column => column?.id)));\r\n    this.list$ = this.collectionName$.pipe(\r\n      switchMap(collection => this.dataAdapterService.list(collection, this.metadata$.getValue()?.idField || 'id')),\r\n      tap(() => this.isLoading$.next(false)),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  getValue(element, column) {\r\n    return this.metadata$.pipe(map(\r\n      metadata => this.valueFormatService.transform(element[column], metadata?.fields[column]?.type, metadata?.fields[column])\r\n    ));\r\n  }\r\n\r\n  delete(element) {\r\n    this.isLoading$.next(true);\r\n    this.dataAdapterService.delete(this.collectionName$.getValue(), element?.id)\r\n      .subscribe(\r\n        () => this.snackbar.success(`${capitalize(this.metadata$.getValue()?.single)} added successfully!`),\r\n        () => this.snackbar.error(`There was an error adding ${this.metadata$.getValue()?.single}!`),\r\n        () => this.isLoading$.next(false)\r\n      );\r\n  }\r\n\r\n  private getDisplayedColumns() {\r\n    return this.metadata$.pipe(\r\n      withLatestFrom(this.subCollections$),\r\n      map(([metadata, subCollections]) => {\r\n        const collumns = this.getDisplayableColumns(metadata?.fields);\r\n        if (subCollections) {\r\n          collumns.push({ id: 'entities', label: 'Manage' });\r\n        }\r\n        collumns.push({ id: 'actions', label: 'Actions' });\r\n\r\n        return collumns;\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  private getDisplayableColumns(columns) {\r\n    if (!columns) {\r\n      return [];\r\n    }\r\n\r\n    return Object.keys(pickBy(columns, col => col && !col?.hideInList)).map(column => {\r\n      return {\r\n        ...columns[column],\r\n        label: columns[column]?.label || this.getFieldLabel({ label: column }),\r\n        id: columns[column]?.id || column\r\n      };\r\n    });\r\n  }\r\n}\r\n","<div class=\"loading-box-overflow\"\r\n     *ngIf=\"isLoading$ | async\">\r\n  <mat-spinner diameter=\"50\"></mat-spinner>\r\n</div>\r\n<ng-container *ngIf=\"metadata$ | async as metadata; else noMetadata\">\r\n  <mat-administration-breadcrumbs [collectionName]=\"collectionName$ | async\"\r\n                                  action=\"update\"></mat-administration-breadcrumbs>\r\n  <mat-toolbar class=\"justify-between toolbar-main\">\r\n    <h1>Update {{metadata?.single}}</h1>\r\n    <span class=\"entity-title\">{{entityTitle$ | async}}<br /><small>#{{id$ | async}}</small></span>\r\n    <a mat-raised-button\r\n       color=\"warn\"\r\n       routerLink=\"/{{collectionPath$ | async}}/list\">\r\n      <mat-icon>keyboard_backspace</mat-icon> Cancel\r\n    </a>\r\n  </mat-toolbar>\r\n  <mat-toolbar *ngIf=\"subCollections$ | async as subCollections\">\r\n    <a *ngFor=\"let subCollection of subCollections\"\r\n       mat-raised-button\r\n       aria-label=\"Manage\"\r\n       routerLink=\"/{{collectionName$ | async}}:{{id$ | async}}:{{subCollection?.id}}/list\">\r\n      {{subCollection?.plural | titlecase}}\r\n    </a>\r\n  </mat-toolbar>\r\n  <mat-card>\r\n    <mat-administration-form *ngIf=\"fields$ | async\"\r\n                             [fields]=\"fields$ | async\"\r\n                             (save)=\"save($event);\"></mat-administration-form>\r\n  </mat-card>\r\n</ng-container>\r\n\r\n<ng-template #noMetadata>\r\n  <mat-chip-list>\r\n    <mat-chip color=\"warn\">No entity metadata defined for&nbsp;<strong>{{collectionName$ | async}}</strong>!</mat-chip>\r\n  </mat-chip-list>\r\n</ng-template>\r\n","import { Component, ChangeDetectionStrategy, Optional, Inject } from '@angular/core';\r\nimport { MetadataComponent } from '../metadata/metadata.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, combineLatest, BehaviorSubject } from 'rxjs';\r\nimport { map, shareReplay, takeUntil, tap, take, switchMap } from 'rxjs/operators';\r\nimport { SnackbarService } from '../../services/snackbar.service';\r\nimport { capitalize } from 'lodash';\r\nimport { DataAdapterService } from '../../services/data-adapter.service';\r\n\r\n@Component({\r\n  selector: 'mat-administration-update',\r\n  templateUrl: './update.component.html',\r\n  styleUrls: ['./update.component.scss']\r\n})\r\nexport class UpdateComponent extends MetadataComponent {\r\n  fields$: Observable<any[]>;\r\n  doc$: Observable<any>;\r\n  id$: BehaviorSubject<any> = new BehaviorSubject(null);\r\n  entityTitle$: Observable<string>;\r\n\r\n  constructor(\r\n    public route: ActivatedRoute,\r\n    private snackbar: SnackbarService,\r\n    private router: Router,\r\n    public dataAdapterService: DataAdapterService,\r\n    @Optional() @Inject('MAT_ADMINISTRATION_METADATA') public metadata: any\r\n  ) {\r\n    super(route, dataAdapterService, metadata);\r\n\r\n    this.route.params.pipe(map(params => params.id), takeUntil(this.destroyed$)).subscribe(this.id$);\r\n    this.doc$ = this.getDoc();\r\n    this.fields$ = combineLatest([this.getFields(), this.doc$])\r\n      .pipe(\r\n        map(([fields, doc]) => fields.map(field => {\r\n          return { ...field, value: this.getFieldValue(field, doc) };\r\n        }))\r\n      );\r\n    this.entityTitle$ = this.doc$.pipe(map(doc => doc?.[this.metadata$.getValue()?.titleField || 'title']));\r\n  }\r\n\r\n  save(item: any) {\r\n    this.isLoading$.next(true);\r\n\r\n    combineLatest([\r\n      this.metadata$,\r\n      this.collectionName$\r\n    ])\r\n      .pipe(\r\n        take(1),\r\n        switchMap(([metadata, collectionName]) => {\r\n          return this.processUploads(item, metadata, 'update').pipe(map(updatedItem => {\r\n            return [\r\n              metadata,\r\n              collectionName,\r\n              updatedItem\r\n            ];\r\n          }));\r\n        }),\r\n        switchMap(([_, collectionName, updatedItem]) =>\r\n          this.dataAdapterService.update(collectionName, this.id$.getValue(), this.getWithTimestamps(updatedItem, 'update'))\r\n        )\r\n      ).subscribe(\r\n        () => {\r\n          this.snackbar.success(`${capitalize(this.metadata$.getValue()?.single)} updated successfully!`);\r\n          this.router.navigate([`/${this.collectionPath$.getValue()}/list`]);\r\n        },\r\n        () => this.snackbar.error(`There was an error updating ${this.metadata$.getValue()?.single}!`),\r\n        () => this.isLoading$.next(false)\r\n      );\r\n  }\r\n\r\n  private getDoc() {\r\n    return this.dataAdapterService.get(this.collectionName$.getValue(), this.id$.getValue()).pipe(\r\n      tap(() => this.isLoading$.next(false)),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  private getFieldValue(field: any, doc: any) {\r\n    if (field?.type === 'timestamp') {\r\n      return doc?.[field?.name]?.toDate();\r\n    }\r\n\r\n    return doc?.[field?.name];\r\n  }\r\n}\r\n","<mat-nav-list color=\"primary\">\n  <ng-container *ngFor=\"let entity of entities\">\n    <a mat-list-item\n       color=\"primary\"\n       routerLinkActive=\"active\"\n       [routerLink]=\"entity.id\"> {{entity.plural | titlecase}} </a>\n    <mat-divider *ngIf=\"entity?.showMenuDividerAfter\"></mat-divider>\n  </ng-container>\n</mat-nav-list>\n","import { Component, OnInit, Optional, Inject } from '@angular/core';\n\n@Component({\n  selector: 'mat-administration-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent {\n  entities = Object.keys(this.metadata?.entities).filter((key: any) => !this.metadata.entities[key]?.hideList).map(key => {\n    return {\n      id: key,\n      ...this.metadata.entities[key]\n    };\n  });\n\n  constructor(\n    @Optional() @Inject('MAT_ADMINISTRATION_METADATA') private metadata: any\n  ) { }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ListComponent, AddComponent, UpdateComponent, MetadataComponent, FormComponent, MenuComponent, BreadcrumbsComponent } from './components/index';\r\nimport { ValueFormatService } from './services/value-format.service';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatFileInputModule } from '@weblauncher/material-file-input';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { AngularFireStorageModule } from '@angular/fire/storage';\r\nimport { FirebaseAppConfig, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ListComponent,\r\n    AddComponent,\r\n    UpdateComponent,\r\n    MetadataComponent,\r\n    FormComponent,\r\n    BreadcrumbsComponent,\r\n    MenuComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatChipsModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    RouterModule,\r\n    MatProgressSpinnerModule,\r\n    CdkTableModule,\r\n    MatTableModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatFileInputModule,\r\n    MatButtonModule,\r\n    CKEditorModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatSlideToggleModule,\r\n    MatDatepickerModule,\r\n    MatSnackBarModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    AngularFirestoreModule,\r\n    AngularFireStorageModule,\r\n    FlexLayoutModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatListModule\r\n  ],\r\n  providers: [\r\n    ValueFormatService,\r\n    DatePipe\r\n  ],\r\n  exports: [\r\n    ListComponent,\r\n    AddComponent,\r\n    UpdateComponent,\r\n    MetadataComponent,\r\n    FormComponent,\r\n    MenuComponent,\r\n    BreadcrumbsComponent,\r\n    RouterModule,\r\n    BrowserAnimationsModule,\r\n    AngularFirestoreModule,\r\n    AngularFireStorageModule\r\n  ]\r\n})\r\nexport class MaterialAdministrationModule {\r\n  static forRoot(\r\n    configFactory: FirebaseAppConfig,\r\n    appNameFactory: () => string | undefined = () => undefined,\r\n  ): ModuleWithProviders {\r\n    return {\r\n      ngModule: MaterialAdministrationModule,\r\n      providers:\r\n        [\r\n          {\r\n            provide: FIREBASE_OPTIONS,\r\n            useValue: configFactory\r\n          },\r\n          {\r\n            provide: FIREBASE_APP_NAME,\r\n            useFactory: appNameFactory\r\n          },\r\n          ValueFormatService\r\n        ]\r\n    };\r\n  }\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { ListComponent, AddComponent, UpdateComponent } from './components';\r\n\r\nexport const materialAdministrationRoutes: Routes = [\r\n  {\r\n    path: ':collection/list',\r\n    component: ListComponent\r\n  },\r\n  {\r\n    path: ':collection/add',\r\n    component: AddComponent\r\n  },\r\n  {\r\n    path: ':collection/update/:id',\r\n    component: UpdateComponent\r\n  },\r\n  {\r\n    path: ':collection',\r\n    redirectTo: ':collection/list'\r\n  }];\r\n"]}